package ru.avalon.java.dev.j10.labs.sort;

import ru.avalon.java.dev.j10.labs.Sort;

/**
 * Пузырьковая сортировка (англ. bubble sort).
 *
 * <p>Простой алгоритм сортировки. Для понимания и
 * реализации этот алгоритм — простейший, но эффективен он
 * лишь для небольших массивов. Сложность алгоритма: O(n^2).
 *
 * @see <a href="https://ru.wikipedia.org/wiki/%D0%A1%D0%BE%D1%80%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%BA%D0%B0_%D0%BF%D1%83%D0%B7%D1%8B%D1%80%D1%8C%D0%BA%D0%BE%D0%BC">Пузырьковая сортировка</a>
 */
public class BubbleSort implements Sort {

    /**
     * {@inheritDoc}
     */
    public void sort(int[] array) {
        /*
         * TODO(Студент): Реализовать метод sort класса BubbleSort
         */
        
        
        /*  TODO (Проверка№1 ЛР№3)
            - Добавить коментарии к полям и методам класса
            - Перед обращением к массиву следует делать проверку на правильность массива,
            если array = null, возникает ошибка!!!
        */
        
        if (array!=null || array.length>0) {            //проверяем входящий массив на ошибку
            boolean sorted = false;        //объявляем и инициализируем переменную, для переключения цикла while
            int temp;                      //объявляем переменную для временного хранения значений элементов массива, при их обмене местами в массиве
        
            while(!sorted){                 
                sorted = true;
                for(int i = 0; i < array.length-1; i++) {  //проходим циклом по элементам массива
                    if(array[i]>array[i+1]){                //заходим в оператор if если есть не отсортированные в нужном порядке элементы
                        sorted=false;                       //инициализируем значением "ложь", чтобы после цикла for повторно
                                                        //пройти по массиву и проверить сортировку
                        temp = array[i];                    //обмениваем значения между элементами массива через временную переменную
                        array[i] = array[i+1];
                        array[i+1] = temp;
                    }
                }
            }
        }
    }
}
